"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ScreenClassProvider;
exports.ScreenClassContext = exports.NO_PROVIDER_FLAG = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _utils = require("../../utils");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var NO_PROVIDER_FLAG = 'NO_PROVIDER_FLAG';
exports.NO_PROVIDER_FLAG = NO_PROVIDER_FLAG;

var ScreenClassContext = _react.default.createContext(NO_PROVIDER_FLAG);

exports.ScreenClassContext = ScreenClassContext;

function ScreenClassProvider(props) {
  var screenClassRef = _react.default.createRef();

  var useOwnWidth = props.useOwnWidth,
      children = props.children,
      fallbackScreenClass = props.fallbackScreenClass;
  var screenClass = (0, _utils.useScreenClass)(screenClassRef, fallbackScreenClass);
  return _react.default.createElement(ScreenClassContext.Provider, {
    value: screenClass
  }, useOwnWidth ? _react.default.createElement("div", {
    ref: useOwnWidth ? screenClassRef : null
  }, children) : _react.default.createElement(_react.default.Fragment, null, children));
}

ScreenClassProvider.propTypes = {
  /**
   * Children of the ScreenClassProvider.
   * This should be all your child React nodes that are using `react-grid-system`.
   */
  children: _propTypes.default.node.isRequired,

  /**
   * Boolean to determine whether own width should be used as source.
   * When provided, the screen class is derived from own dimensions instead of the window.
   */
  useOwnWidth: _propTypes.default.bool,

  /**
   * Screen class to use when it cannot be determined otherwise.
   * Useful for server side rendering.
   */
  fallbackScreenClass: _propTypes.default.oneOf([null, 'xs', 'sm', 'md', 'lg', 'xl'])
};
ScreenClassProvider.defaultProps = {
  useOwnWidth: false,
  fallbackScreenClass: null
};